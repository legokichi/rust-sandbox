version: 2.1


commands:
  save_cargo_cache:
    parameters:
      directory:
        type: string
    steps:
      - run:
          name: Make /tmp/build-env file to use as cache key
          command: |
            cd "<<parameters.directory>>"
            echo $OS_VERSION | tee /tmp/build-env
            rustc --version | tee -a /tmp/build-env
      - save_cache:
          key: cache-cargo-target-{{ .Environment.CIRCLECI_CACHE_VERSION }}-<<parameters.directory>>-{{ checksum "/tmp/build-env" }}-{{ checksum "<<parameters.directory>>/Cargo.lock" }}
          paths:
            - /home/circleci/.cargo/bin/
            - /home/circleci/.cargo/git/
            - /home/circleci/.cargo/registry/
            - target

  restore_cargo_cache:
    parameters:
      directory:
        type: string
    steps:
      - run:
          name: Make /tmp/build-env file to use as cache key
          command: |
            cd "<<parameters.directory>>"
            echo $OS_VERSION | tee /tmp/build-env
            rustc --version | tee -a /tmp/build-env
      - run: |
          sudo chown -R circleci /home/circleci/.cargo/
      - restore_cache:
          keys:
            - cache-cargo-target-{{ .Environment.CIRCLECI_CACHE_VERSION }}-<<parameters.directory>>-{{ checksum "/tmp/build-env" }}-{{ checksum "<<parameters.directory>>/Cargo.lock" }}
            - cache-cargo-target-{{ .Environment.CIRCLECI_CACHE_VERSION }}-<<parameters.directory>>-{{ checksum "/tmp/build-env" }}-

workflows:
  build_and_test:
    jobs:
      - test

jobs:
  test:
    docker:
      - image: cimg/rust:1.61.0
    steps:
      - checkout
      - restore_cargo_cache:
          directory: ./grcov-sandbox
      - run: cargo install grcov || exit 0
      - run: rustup component add llvm-tools-preview || exit 0
      - run: cd grcov-sandbox && cargo clean
      - run: cd grcov-sandbox && RUSTFLAGS="-C instrument-coverage" LLVM_PROFILE_FILE="your_name-%p-%m.profraw" cargo test
      - save_cargo_cache:
          directory: ./grcov-sandbox
      - run: cd grcov-sandbox && grcov . -s . --binary-path ./target/debug/ -t lcov --branch --ignore-not-existing -o lcov.info
      - run: cd grcov-sandbox && bash <(curl -s https://codecov.io/bash) -f lcov.info -R ..

